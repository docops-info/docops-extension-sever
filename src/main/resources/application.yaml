server:
  servlet:
    context-path: /extension
  port: 8010
  compression:
    enabled: true
    mime-types: image/svg+xml,text/html

management:
  endpoints:
    web:
      exposure:
        include: info,health,loggers,metrics,beans,mappings,threaddump,heapdump,prometheus,swagger-ui,sbom
    jmx:
      exposure:
        include: info,health,loggers,metrics,beans,mappings,threaddump,heapdump,prometheus,swagger-ui,sbom
  health:
    defaults:
      enabled: true
  endpoint:
    health:
      show-details: always
  info:
    git:
      mode: full
  tracing:
    sampling:
      probability: 1.0

  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true

logging:
  file:
    name: docops-extension-service.log
    path: .
  pattern:
    level:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}){magenta} %clr(${PID:- }){blue} %clr(---){faint} [%clr(%X{traceId}){magenta}, %clr(%X{spanId}){magenta}] %clr([%t]){green} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"
    file: '%date %green(%level) %yellow([%thread]) %cyan(%logger{10}) [%file : %line] [${spring.application.name:}] - %X - %msg%n'
  level:
    io.docops.docopsextensionssupport.web.StatsController: DEBUG
    org.springframework.context.event: DEBUG



spring:
  output:
    ansi:
      enabled: detect
  application:
    name: DocopsExtensionsSupportApplication
    admin:
      enabled: true
  mvc:
    problemdetails:
      enabled: true
  freemarker:
    template-loader-path: classpath:/templates
    suffix: .ftlh
  web:
    resources:
      chain:
        strategy:
          content:
            enabled: true
          fixed:
            paths: /**
  threads:
    virtual:
      enabled: true

springdoc:
  api-docs:
    enabled: true
  show-actuator: true
  model-and-view-allowed: true
  swagger-ui:
    path: /swagger-ui.html

eureka:
  client:
    enabled: false

---
spring:
  config:
    activate:
      on-profile: discovery

eureka:
  instance:
    hostname: localhost
    health-check-url-path: ${server.servlet.context-path}/actuator/health
    status-page-url-path: ${server.servlet.context-path}/actuator/info
    appname: DocOpsExtensionServer
    leaseRenewalIntervalInSeconds: 60
    prefer-ip-address: false

  client:
    service-url:
      defaultZone: http://${eureka.instance.hostname}:8050/admin/eureka/
    region: default
    enabled: true
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 30
